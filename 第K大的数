
//有一个整数数组，请你根据快速排序的思路，找出数组中第K大的数。

//给定一个整数数组a,同时给定它的大小n和要找的K(K在1到n之间)，请返回第K大的数


public class Finder {
    public int findKth(int[] a, int n, int K) {
        return findKth(a, 0, n-1, K);
    }
    public int findKth(int[] a, int low, int high, int k) {
        int partIndex = partation(a, low, high);

        if(k == partIndex - low + 1) return a[partIndex];
        else if(k > partIndex - low + 1) return findKth(a, partIndex + 1, high, k - partIndex + low -1);
        else return findKth(a, low, partIndex -1, k);

    }
    public int partation(int[] a, int low, int high) {
        int part = a[low];
        while(low < high) {
            while(low < high && a[high] <= part) high--;
            a[low] = a[high];
            while(low < high && a[low] >= part) low++;
            a[high] = a[low];
        }
        a[low] = part;
        return low;
    }
}
